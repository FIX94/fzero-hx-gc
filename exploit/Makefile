# Copyright 2018 FIX94
# This code is licensed to you under the terms of the GNU GPL, version 2;
# see file LICENSE or http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt


# Configuration:

# What toolchain prefix should we use
CROSS ?= powerpc-eabi-

ifeq ($(OS),Windows_NT)
	INJLDR = $(CURDIR)/fzero_injldr.exe
else
	INJLDR = $(CURDIR)/fzero_injldr
endif

# End of configuration.



# Set CC, LD, OBJCOPY based on CROSS, unless they are set already

ifeq ($(origin CC), default)
	CC := $(CROSS)gcc -m32
endif
ifeq ($(origin LD), default)
	LD := $(CROSS)ld
endif
OBJCOPY ?= $(CROSS)objcopy


# The compiler flags we need.

CFLAGS := -Wall -W -O1 -fPIC -ffreestanding -mno-eabi -mno-sdata -mcpu=750


# Build with "V=1" to see the commands executed; be quiet otherwise.

ifeq ($(V),1)
	Q :=
else
	Q := @
	MAKEFLAGS += --no-print-directory
endif


targets := gfze.gci gfzj.gci gfzp.gci
targets-short := gfze gfzj gfzp

objs := fzero.o start.o

all: $(targets)

$(targets): %.gci : %.dat %.ori
	@echo "  OUTPUT    $@"
	$(Q)$(INJLDR) $(basename $@)

dats := gfze.dat gfzj.dat gfzp.dat

$(dats): %.dat: %.elf
	@echo "  OBJCOPY   $@"
	$(Q)$(OBJCOPY) -Obinary $< $@

elfs := $(dats:.dat=.elf)

$(elfs): %.elf: fzero.ld $(objs)
	@echo "  LINK      $@"
	$(Q)$(LD) -T $^ -o $@

%.o: %.S
	@echo "  ASSEMBLE  $@"
	$(Q)$(CC) $(CFLAGS) -c $< -o $@

%.o: %.c
	@echo "  COMPILE   $@"
	$(Q)$(CC) $(CFLAGS) -c $< -o $@

clean:
	-rm -f $(targets) $(saves) $(elfs) $(objs) $(slots) $(dats) loader.h
